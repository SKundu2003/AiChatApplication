//generated by ChatGPT

ðŸ§  Developerâ€™s Learning Journal: An AI-Powered Journey
Day 1 â€“ Meeting REST APIs

"I began my journey with APIs. I was fascinated by how simple HTTP methods like GET, POST, PUT, and DELETE could build powerful systems. REST â€” short for Representational State Transfer â€” felt like a conversation with a server. You ask for data, update it, delete it, all with URLs and some JSON. It was my first real sense of how the web breathes."

Day 3 â€“ Discovering Spring Boot

"Spring Boot was love at first annotation. The magic of @SpringBootApplication, the ease of embedded servers, and auto-configurations made me feel powerful. I built my first CRUD API in hours â€” no XML, no boilerplate. Just pure Java joy. And the DevTools reload? Game-changer."

Day 7 â€“ Dependency Injection Revelation

"I had written classes creating their own dependencies... until I met Springâ€™s Dependency Injection. Suddenly, my code was cleaner, testable, loosely coupled. Instead of saying 'make your own tools', I was saying 'here are your tools, use them'. That was the real start of designing software with intent."

Day 10 â€“ The Vector Awakening

"I was introduced to vector databases. The idea that I could convert natural language into high-dimensional numbers and search by meaning blew my mind. With tools like pgvector and Weaviate, I no longer had to match keywords â€” I could match ideas. This changed everything I knew about search."

Day 12 â€“ RAG: Making AI Think with Memory

"Retrieval-Augmented Generation (RAG) felt like giving my AI a memory. Instead of hallucinating facts, it could pull real knowledge from documents. It was like giving ChatGPT access to my notes before answering. Context was no longer a luxury â€” it was a superpower."

Day 15 â€“ Enter Ollama

"Running LLMs locally? That sounded impossible until I used Ollama. It felt like having my own private GPT running on my machine. Fast, private, offline. I no longer needed the cloud to experiment with AI. I was building tools that respected my data and didnâ€™t need an internet connection."

Day 18 â€“ Prompt Engineering: The Real Art

"Prompting wasnâ€™t just asking questions. It was designing them. Giving structure. Setting roles. Few-shot examples. Rephrasing to reduce ambiguity. Prompt engineering was like being the director of a play â€” telling the model how to act. And it listened."

Day 21 â€“ Building the AI Knowledge Stack

"I had all the parts: a REST API in Spring Boot, embeddings from OpenAI and Ollama, semantic search with pgvector, and RAG to tie it all together. I built a knowledge bot that didnâ€™t just answer â€” it understood. I could feed it docs, blogs, my notes, and it responded with clarity and context. I wasnâ€™t just building code. I was building intelligence."

Day 25 â€“ Reflections

"Learning AI is like learning to talk to machines again â€” not in their language, but in ours. Itâ€™s not just about models and vectors. Itâ€™s about empathy, clarity, and design. Iâ€™ve just scratched the surface, but every day is a new step toward smarter, more human-like systems."